#!/bin/bash

userid=$(id -u)
Timestamp=$(date +%F-%H-%M-%S)
Script_Name=$(echo $0 | cut -d "." -f1)
Logfile=/tmp/$Script_Name-$Timestamp.log
R="\e[31m"
G="\e[32m"
Y="\e[33m"
N="\e[0m"

validate() {
    if [ $1 -ne 0 ]; then 
        echo -e "$2...$R Failure $N"
    else
        echo -e "$2...$G Success $N"
    fi 
}

if [ $userid -ne 0 ]; then
    echo "Please run the script with root access"
    exit 1
else 
    echo "You are super user"
fi

dnf module disable nodejs -y &>>$Logfile
validate $? "Diasbling default nodejs"

dnf module enable nodejs:20 -y &>>$Logfile   # Fixed typo: 'install enable' â†’ 'module enable'
validate $? "Enabling nodejs:20 module"

dnf install nodejs -y &>>$Logfile
validate $? "Installing nodejs"

id expense &>>$Logfile
if [ $? -ne 0 ]
then
useradd expense &>>$Logfile
validate $? "Creating expense user"
else 
echo -e "Expense user already created...$Y Skipping $N"
fi 

mkdir -p /app &>>$Logfile
validate $? "Creating app directory"

curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip &>>$Logfile
validate $? "Downloading backend code"

cd /app
unzip /tmp/backend.zip &>>$Logfile
validate $? "Extracted backend code"

npm install &>>$Logfile
validate $? "Installing nodejs dependencies"

mysql_root_password=ExpenseApp@1 

cp /home/ec2-user/expense-shell/backend /etc/systemd/system/backend.service &>>$Logfile
validate $? "Copied backend"

cat <<EOF > /etc/systemd/system/backend.service
[Unit]
Description=Backend Service
After=network.target

[Service]
User=expense
WorkingDirectory=/app
ExecStart=/bin/node /app/index.js
Restart=always

[Install]
WantedBy=multi-user.target
EOF
validate $? "Creating backend.service file"

systemctl daemon-reload &>>$Logfile
validate $? "System reload"

systemctl start backend &>>$Logfile
validate $? "Start backend"

systemctl enable backend &>>$Logfile
validate $? "Enabling backend"

dnf install mysql -y &>>$Logfile
validate $? "Mysql client installation"

mysql -h 172.31.92.210 -uroot -p${mysql_root_password} < /app/schema/backend.sql &>>$Logfile
validate $? "schema loading"

systemctl restart backend &>>$Logfile
validate $? "Restart backend"